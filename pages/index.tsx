import Head from 'next/head'
import { GetServerSideProps } from "next";
import { useEffect, useState } from "react";
import { getServerSideInitialUi, login, updateUi } from "../utils/deluge";
import { ITorrent, TorrentCard } from "../components/TorrentCard";


// Props that should come from getServerSideProps
interface IServerSideProps {
    initialTorrentData: ITorrent[];
}

export default function Home( props: IServerSideProps ) {

    const [ torrents, setTorrents ] = useState( props.initialTorrentData );

    useEffect( () => {
        const interval = setInterval( async () => {
            const data = (await updateUi()).data.result.torrents
            setTorrents( data );
        }, 10000 );

        return () => clearInterval( interval );
    }, [] )

    return (
        <div className={"bg-slate-900 text-white h-full min-h-screen"}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <main className={"flex flex-col"}>
                <h1 className={"self-center text-3xl font-mono"}>
                    Dashboard
                </h1>

                <TorrentCard torrents={torrents}/>

            </main>
        </div>
    )
}

export const getServerSideProps: GetServerSideProps<IServerSideProps> = async ( ctx ) => {

    const cookie = await login();
    const initialTorrentData = (await getServerSideInitialUi( cookie )).data.result.torrents;
    ctx.res.setHeader( 'set-cookie', cookie as string[] )


    return {
        props: {
            initialTorrentData
        }
    }
}