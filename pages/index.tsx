import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import axios from "axios";
import { GetServerSideProps } from "next";

export default function Home() {

  const handleButtonClick = () => {
    axios.post('/api/deluge', {
      method: 'web.hosts',
      params: [],
      id: 1
    }, {withCredentials: true });
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <button onClick={handleButtonClick}>
          Click me for data!
        </button>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export const getServerSideProps: GetServerSideProps = async (ctx) => {

  // Authenticate with Deluge
  let fetchResponse = await axios.post('http://10.0.0.116:8112/json', {
    method: 'auth.login',
    params: ['deluge'],
    id: 1
  }, {withCredentials: true});

  console.log(fetchResponse.data);
  if (fetchResponse.status == 200) {
    const cookie = fetchResponse.headers && fetchResponse.headers['set-cookie'] as string[];

    // Grab cookie and change the path to be equal to our proxy - We need to proxy it like this because CORS is annoying
    // and there is currently no way to change the accepted domains on deluge's end.
    const parsed = cookie[0].split('Path=');
    parsed[1] = '/api/deluge';
    cookie[0] = parsed.join('Path=');
    ctx.res.setHeader('set-cookie', cookie as string[])
  }

  return { props: {} }
}